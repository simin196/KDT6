#--------------------------------------------------------------------------
# 리스트 전용의 함수 즉. 메서드(Method)
# - 리스트의 원소/요소를 제어하기 위한 함수들
#--------------------------------------------------------------------------

import random as rad

# 실습 데이터 -> 임의의 정수 숫자 10개 구성된 리스트
data=[1,2,3,4,5,3,3,8,9,0]

# * 1. 요소 인덱스를 반환하는 메서드 index()
# -> 4의 인덱스를 찾기
# -> 왼쪽 >>>> 오른쪽으로 찾음 ==> 결과 : 정수
# idx= data.index(4)
# print(f'4의 인덱스 : {idx}')

# # -> 11(없는 번호)의 인덱스 찾기 ===> 결과 : 존재하지 않는 데이터를 경우 ERROR
# if 11 in data: 
#     idx= data.index(11)
#     print(f'11의 인덱스 : {idx}')
# else:
#     print('11은 존재하지 않는 데이터 입니다.') # ERROR가 일어나기에 멤버 연산자로 조건문 만들어
#                                              # 에러를 피할수있

# # 3의 인덱스 찾기
# if 3 in data: 
#     idx= data.index(3) # index() 하면 젤 앞에있는 인덱스 알려주는데
#     print(f'3의 인덱스 : {idx}') 

# if 3 in data: 
#     idx= data.index(3, 5) # index(,) ','후 숫자를 넣으면 그 인덱스 자리부터 찾음
#     print(f'3의 인덱스 : {idx}') 

# if 3 in data: 
#     idx= data.index(3,6) # 3번째 3의 인덱스 출력
#     print(f'3의 인덱스 : {idx}') 
# else:
#     print('11은 존재하지 않는 데이터 입니다.')

#--------------------------------------------------------------------------
# * 2 데이터가 몇개 존재하는지 갯수 파악하는 메서드 - count(데이터)
cnt=data.count(3)
print(f'3의 개수 : {cnt}개')
idx=0
for i in range(cnt):
    idx = data.index(3, idx if not i else idx+1)
    print(f'{i+1}번째 3의 인덱스 : {idx}')